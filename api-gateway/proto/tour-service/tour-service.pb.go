// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v5.26.1
// source: tour-service.proto

package tour_service

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MapObjectType int32

const (
	MapObjectType_Other      MapObjectType = 0
	MapObjectType_Restaurant MapObjectType = 1
	MapObjectType_WC         MapObjectType = 2
	MapObjectType_Parking    MapObjectType = 3
)

// Enum value maps for MapObjectType.
var (
	MapObjectType_name = map[int32]string{
		0: "Other",
		1: "Restaurant",
		2: "WC",
		3: "Parking",
	}
	MapObjectType_value = map[string]int32{
		"Other":      0,
		"Restaurant": 1,
		"WC":         2,
		"Parking":    3,
	}
)

func (x MapObjectType) Enum() *MapObjectType {
	p := new(MapObjectType)
	*p = x
	return p
}

func (x MapObjectType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MapObjectType) Descriptor() protoreflect.EnumDescriptor {
	return file_tour_service_proto_enumTypes[0].Descriptor()
}

func (MapObjectType) Type() protoreflect.EnumType {
	return &file_tour_service_proto_enumTypes[0]
}

func (x MapObjectType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MapObjectType.Descriptor instead.
func (MapObjectType) EnumDescriptor() ([]byte, []int) {
	return file_tour_service_proto_rawDescGZIP(), []int{0}
}

type TourDifficulty int32

const (
	TourDifficulty_Easy   TourDifficulty = 0
	TourDifficulty_Medium TourDifficulty = 1
	TourDifficulty_Hard   TourDifficulty = 2
)

// Enum value maps for TourDifficulty.
var (
	TourDifficulty_name = map[int32]string{
		0: "Easy",
		1: "Medium",
		2: "Hard",
	}
	TourDifficulty_value = map[string]int32{
		"Easy":   0,
		"Medium": 1,
		"Hard":   2,
	}
)

func (x TourDifficulty) Enum() *TourDifficulty {
	p := new(TourDifficulty)
	*p = x
	return p
}

func (x TourDifficulty) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TourDifficulty) Descriptor() protoreflect.EnumDescriptor {
	return file_tour_service_proto_enumTypes[1].Descriptor()
}

func (TourDifficulty) Type() protoreflect.EnumType {
	return &file_tour_service_proto_enumTypes[1]
}

func (x TourDifficulty) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TourDifficulty.Descriptor instead.
func (TourDifficulty) EnumDescriptor() ([]byte, []int) {
	return file_tour_service_proto_rawDescGZIP(), []int{1}
}

type CheckpointDTO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TourId               int32    `protobuf:"varint,2,opt,name=tour_id,json=tourId,proto3" json:"tour_id,omitempty"`
	AuthorId             int32    `protobuf:"varint,3,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
	Longitude            float64  `protobuf:"fixed64,4,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Latitude             float64  `protobuf:"fixed64,5,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Name                 string   `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	Description          string   `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`
	Pictures             []string `protobuf:"bytes,8,rep,name=pictures,proto3" json:"pictures,omitempty"`
	RequiredTime         float64  `protobuf:"fixed64,9,opt,name=required_time,json=requiredTime,proto3" json:"required_time,omitempty"`
	CheckpointSecret     string   `protobuf:"bytes,10,opt,name=checkpoint_secret,json=checkpointSecret,proto3" json:"checkpoint_secret,omitempty"`
	EncounterId          int32    `protobuf:"varint,11,opt,name=encounter_id,json=encounterId,proto3" json:"encounter_id,omitempty"`
	IsSecretPrerequisite bool     `protobuf:"varint,12,opt,name=is_secret_prerequisite,json=isSecretPrerequisite,proto3" json:"is_secret_prerequisite,omitempty"`
}

func (x *CheckpointDTO) Reset() {
	*x = CheckpointDTO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tour_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckpointDTO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckpointDTO) ProtoMessage() {}

func (x *CheckpointDTO) ProtoReflect() protoreflect.Message {
	mi := &file_tour_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckpointDTO.ProtoReflect.Descriptor instead.
func (*CheckpointDTO) Descriptor() ([]byte, []int) {
	return file_tour_service_proto_rawDescGZIP(), []int{0}
}

func (x *CheckpointDTO) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CheckpointDTO) GetTourId() int32 {
	if x != nil {
		return x.TourId
	}
	return 0
}

func (x *CheckpointDTO) GetAuthorId() int32 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

func (x *CheckpointDTO) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *CheckpointDTO) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *CheckpointDTO) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CheckpointDTO) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CheckpointDTO) GetPictures() []string {
	if x != nil {
		return x.Pictures
	}
	return nil
}

func (x *CheckpointDTO) GetRequiredTime() float64 {
	if x != nil {
		return x.RequiredTime
	}
	return 0
}

func (x *CheckpointDTO) GetCheckpointSecret() string {
	if x != nil {
		return x.CheckpointSecret
	}
	return ""
}

func (x *CheckpointDTO) GetEncounterId() int32 {
	if x != nil {
		return x.EncounterId
	}
	return 0
}

func (x *CheckpointDTO) GetIsSecretPrerequisite() bool {
	if x != nil {
		return x.IsSecretPrerequisite
	}
	return false
}

type TourDTO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int32            `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name           string           `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description    string           `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	DemandingLevel string           `protobuf:"bytes,4,opt,name=demanding_level,json=demandingLevel,proto3" json:"demanding_level,omitempty"`
	Price          float64          `protobuf:"fixed64,5,opt,name=price,proto3" json:"price,omitempty"`
	Tags           []string         `protobuf:"bytes,6,rep,name=tags,proto3" json:"tags,omitempty"`
	AuthorId       int32            `protobuf:"varint,7,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
	Status         string           `protobuf:"bytes,8,opt,name=status,proto3" json:"status,omitempty"`
	Equipment      []*Equipment     `protobuf:"bytes,9,rep,name=equipment,proto3" json:"equipment,omitempty"`
	Checkpoints    []*CheckpointDTO `protobuf:"bytes,10,rep,name=checkpoints,proto3" json:"checkpoints,omitempty"`
	TourTimes      []int32          `protobuf:"varint,11,rep,packed,name=tour_times,json=tourTimes,proto3" json:"tour_times,omitempty"`
	TourRatings    []int32          `protobuf:"varint,12,rep,packed,name=tour_ratings,json=tourRatings,proto3" json:"tour_ratings,omitempty"`
	Closed         bool             `protobuf:"varint,13,opt,name=closed,proto3" json:"closed,omitempty"`
}

func (x *TourDTO) Reset() {
	*x = TourDTO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tour_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TourDTO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TourDTO) ProtoMessage() {}

func (x *TourDTO) ProtoReflect() protoreflect.Message {
	mi := &file_tour_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TourDTO.ProtoReflect.Descriptor instead.
func (*TourDTO) Descriptor() ([]byte, []int) {
	return file_tour_service_proto_rawDescGZIP(), []int{1}
}

func (x *TourDTO) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TourDTO) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TourDTO) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *TourDTO) GetDemandingLevel() string {
	if x != nil {
		return x.DemandingLevel
	}
	return ""
}

func (x *TourDTO) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *TourDTO) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *TourDTO) GetAuthorId() int32 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

func (x *TourDTO) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *TourDTO) GetEquipment() []*Equipment {
	if x != nil {
		return x.Equipment
	}
	return nil
}

func (x *TourDTO) GetCheckpoints() []*CheckpointDTO {
	if x != nil {
		return x.Checkpoints
	}
	return nil
}

func (x *TourDTO) GetTourTimes() []int32 {
	if x != nil {
		return x.TourTimes
	}
	return nil
}

func (x *TourDTO) GetTourRatings() []int32 {
	if x != nil {
		return x.TourRatings
	}
	return nil
}

func (x *TourDTO) GetClosed() bool {
	if x != nil {
		return x.Closed
	}
	return false
}

type MapObjectDTO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string  `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	PictureUrl  string  `protobuf:"bytes,4,opt,name=picture_url,json=pictureUrl,proto3" json:"picture_url,omitempty"`
	Category    string  `protobuf:"bytes,5,opt,name=category,proto3" json:"category,omitempty"`
	Longitude   float64 `protobuf:"fixed64,6,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Latitude    float64 `protobuf:"fixed64,7,opt,name=latitude,proto3" json:"latitude,omitempty"`
}

func (x *MapObjectDTO) Reset() {
	*x = MapObjectDTO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tour_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MapObjectDTO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapObjectDTO) ProtoMessage() {}

func (x *MapObjectDTO) ProtoReflect() protoreflect.Message {
	mi := &file_tour_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapObjectDTO.ProtoReflect.Descriptor instead.
func (*MapObjectDTO) Descriptor() ([]byte, []int) {
	return file_tour_service_proto_rawDescGZIP(), []int{2}
}

func (x *MapObjectDTO) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MapObjectDTO) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MapObjectDTO) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MapObjectDTO) GetPictureUrl() string {
	if x != nil {
		return x.PictureUrl
	}
	return ""
}

func (x *MapObjectDTO) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *MapObjectDTO) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *MapObjectDTO) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

type TourPreferenceDTO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatorId  int32    `protobuf:"varint,2,opt,name=creator_id,json=creatorId,proto3" json:"creator_id,omitempty"`
	Difficulty string   `protobuf:"bytes,3,opt,name=difficulty,proto3" json:"difficulty,omitempty"`
	Walk       int32    `protobuf:"varint,4,opt,name=walk,proto3" json:"walk,omitempty"`
	Bike       int32    `protobuf:"varint,5,opt,name=bike,proto3" json:"bike,omitempty"`
	Car        int32    `protobuf:"varint,6,opt,name=car,proto3" json:"car,omitempty"`
	Boat       int32    `protobuf:"varint,7,opt,name=boat,proto3" json:"boat,omitempty"`
	Tags       []string `protobuf:"bytes,8,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *TourPreferenceDTO) Reset() {
	*x = TourPreferenceDTO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tour_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TourPreferenceDTO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TourPreferenceDTO) ProtoMessage() {}

func (x *TourPreferenceDTO) ProtoReflect() protoreflect.Message {
	mi := &file_tour_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TourPreferenceDTO.ProtoReflect.Descriptor instead.
func (*TourPreferenceDTO) Descriptor() ([]byte, []int) {
	return file_tour_service_proto_rawDescGZIP(), []int{3}
}

func (x *TourPreferenceDTO) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TourPreferenceDTO) GetCreatorId() int32 {
	if x != nil {
		return x.CreatorId
	}
	return 0
}

func (x *TourPreferenceDTO) GetDifficulty() string {
	if x != nil {
		return x.Difficulty
	}
	return ""
}

func (x *TourPreferenceDTO) GetWalk() int32 {
	if x != nil {
		return x.Walk
	}
	return 0
}

func (x *TourPreferenceDTO) GetBike() int32 {
	if x != nil {
		return x.Bike
	}
	return 0
}

func (x *TourPreferenceDTO) GetCar() int32 {
	if x != nil {
		return x.Car
	}
	return 0
}

func (x *TourPreferenceDTO) GetBoat() int32 {
	if x != nil {
		return x.Boat
	}
	return 0
}

func (x *TourPreferenceDTO) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type Equipment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *Equipment) Reset() {
	*x = Equipment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tour_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Equipment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Equipment) ProtoMessage() {}

func (x *Equipment) ProtoReflect() protoreflect.Message {
	mi := &file_tour_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Equipment.ProtoReflect.Descriptor instead.
func (*Equipment) Descriptor() ([]byte, []int) {
	return file_tour_service_proto_rawDescGZIP(), []int{4}
}

func (x *Equipment) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Equipment) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Equipment) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type MapObject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32         `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string        `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string        `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	PictureUrl  string        `protobuf:"bytes,4,opt,name=picture_url,json=pictureUrl,proto3" json:"picture_url,omitempty"`
	Category    MapObjectType `protobuf:"varint,5,opt,name=category,proto3,enum=tour.MapObjectType" json:"category,omitempty"`
	Longitude   float64       `protobuf:"fixed64,6,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Latitude    float64       `protobuf:"fixed64,7,opt,name=latitude,proto3" json:"latitude,omitempty"`
}

func (x *MapObject) Reset() {
	*x = MapObject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tour_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MapObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapObject) ProtoMessage() {}

func (x *MapObject) ProtoReflect() protoreflect.Message {
	mi := &file_tour_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapObject.ProtoReflect.Descriptor instead.
func (*MapObject) Descriptor() ([]byte, []int) {
	return file_tour_service_proto_rawDescGZIP(), []int{5}
}

func (x *MapObject) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MapObject) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MapObject) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MapObject) GetPictureUrl() string {
	if x != nil {
		return x.PictureUrl
	}
	return ""
}

func (x *MapObject) GetCategory() MapObjectType {
	if x != nil {
		return x.Category
	}
	return MapObjectType_Other
}

func (x *MapObject) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *MapObject) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

type TourPreference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int32          `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatorId  int32          `protobuf:"varint,2,opt,name=creator_id,json=creatorId,proto3" json:"creator_id,omitempty"`
	Difficulty TourDifficulty `protobuf:"varint,3,opt,name=difficulty,proto3,enum=tour.TourDifficulty" json:"difficulty,omitempty"`
	Walk       int32          `protobuf:"varint,4,opt,name=walk,proto3" json:"walk,omitempty"`
	Bike       int32          `protobuf:"varint,5,opt,name=bike,proto3" json:"bike,omitempty"`
	Car        int32          `protobuf:"varint,6,opt,name=car,proto3" json:"car,omitempty"`
	Boat       int32          `protobuf:"varint,7,opt,name=boat,proto3" json:"boat,omitempty"`
	Tags       []string       `protobuf:"bytes,8,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *TourPreference) Reset() {
	*x = TourPreference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tour_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TourPreference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TourPreference) ProtoMessage() {}

func (x *TourPreference) ProtoReflect() protoreflect.Message {
	mi := &file_tour_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TourPreference.ProtoReflect.Descriptor instead.
func (*TourPreference) Descriptor() ([]byte, []int) {
	return file_tour_service_proto_rawDescGZIP(), []int{6}
}

func (x *TourPreference) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TourPreference) GetCreatorId() int32 {
	if x != nil {
		return x.CreatorId
	}
	return 0
}

func (x *TourPreference) GetDifficulty() TourDifficulty {
	if x != nil {
		return x.Difficulty
	}
	return TourDifficulty_Easy
}

func (x *TourPreference) GetWalk() int32 {
	if x != nil {
		return x.Walk
	}
	return 0
}

func (x *TourPreference) GetBike() int32 {
	if x != nil {
		return x.Bike
	}
	return 0
}

func (x *TourPreference) GetCar() int32 {
	if x != nil {
		return x.Car
	}
	return 0
}

func (x *TourPreference) GetBoat() int32 {
	if x != nil {
		return x.Boat
	}
	return 0
}

func (x *TourPreference) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type TourRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *TourRequest) Reset() {
	*x = TourRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tour_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TourRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TourRequest) ProtoMessage() {}

func (x *TourRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tour_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TourRequest.ProtoReflect.Descriptor instead.
func (*TourRequest) Descriptor() ([]byte, []int) {
	return file_tour_service_proto_rawDescGZIP(), []int{7}
}

func (x *TourRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type TourResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tour *TourDTO `protobuf:"bytes,1,opt,name=tour,proto3" json:"tour,omitempty"`
}

func (x *TourResponse) Reset() {
	*x = TourResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tour_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TourResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TourResponse) ProtoMessage() {}

func (x *TourResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tour_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TourResponse.ProtoReflect.Descriptor instead.
func (*TourResponse) Descriptor() ([]byte, []int) {
	return file_tour_service_proto_rawDescGZIP(), []int{8}
}

func (x *TourResponse) GetTour() *TourDTO {
	if x != nil {
		return x.Tour
	}
	return nil
}

var File_tour_service_proto protoreflect.FileDescriptor

var file_tour_service_proto_rawDesc = []byte{
	0x0a, 0x12, 0x74, 0x6f, 0x75, 0x72, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x74, 0x6f, 0x75, 0x72, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8c, 0x03, 0x0a, 0x0d, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x44, 0x54, 0x4f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x6f,
	0x75, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x74, 0x6f, 0x75,
	0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d,
	0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x2b, 0x0a, 0x11, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f,
	0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x21,
	0x0a, 0x0c, 0x65, 0x6e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x65, 0x6e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x34, 0x0a, 0x16, 0x69, 0x73, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x70,
	0x72, 0x65, 0x72, 0x65, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x14, 0x69, 0x73, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x50, 0x72, 0x65, 0x72, 0x65,
	0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x65, 0x22, 0x97, 0x03, 0x0a, 0x07, 0x54, 0x6f, 0x75, 0x72,
	0x44, 0x54, 0x4f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x65, 0x6d,
	0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x64, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x1b, 0x0a, 0x09,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x2d, 0x0a, 0x09, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x09,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x6f, 0x75, 0x72, 0x2e, 0x45, 0x71, 0x75, 0x69,
	0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x09, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x35, 0x0a, 0x0b, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18,
	0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x74, 0x6f, 0x75, 0x72, 0x2e, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x44, 0x54, 0x4f, 0x52, 0x0b, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x75, 0x72, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x05, 0x52, 0x09, 0x74, 0x6f, 0x75,
	0x72, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x75, 0x72, 0x5f, 0x72,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0b, 0x74, 0x6f,
	0x75, 0x72, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6c, 0x6f,
	0x73, 0x65, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x63, 0x6c, 0x6f, 0x73, 0x65,
	0x64, 0x22, 0xcb, 0x01, 0x0a, 0x0c, 0x4d, 0x61, 0x70, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44,
	0x54, 0x4f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x69, 0x63, 0x74,
	0x75, 0x72, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70,
	0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75,
	0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74,
	0x75, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x22,
	0xc4, 0x01, 0x0a, 0x11, 0x54, 0x6f, 0x75, 0x72, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x44, 0x54, 0x4f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c,
	0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63,
	0x75, 0x6c, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x61, 0x6c, 0x6b, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x77, 0x61, 0x6c, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x69, 0x6b, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x62, 0x69, 0x6b, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x63, 0x61, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x63, 0x61, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x62, 0x6f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x62, 0x6f,
	0x61, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0x51, 0x0a, 0x09, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xdd, 0x01, 0x0a, 0x09, 0x4d, 0x61,
	0x70, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a,
	0x0b, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x2f,
	0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x13, 0x2e, 0x74, 0x6f, 0x75, 0x72, 0x2e, 0x4d, 0x61, 0x70, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12,
	0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x22, 0xd7, 0x01, 0x0a, 0x0e, 0x54, 0x6f,
	0x75, 0x72, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x0a, 0x64,
	0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x14, 0x2e, 0x74, 0x6f, 0x75, 0x72, 0x2e, 0x54, 0x6f, 0x75, 0x72, 0x44, 0x69, 0x66, 0x66, 0x69,
	0x63, 0x75, 0x6c, 0x74, 0x79, 0x52, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74,
	0x79, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x61, 0x6c, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x77, 0x61, 0x6c, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x69, 0x6b, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x62, 0x69, 0x6b, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x61, 0x72,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x63, 0x61, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x62,
	0x6f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x62, 0x6f, 0x61, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x61, 0x67, 0x73, 0x22, 0x1d, 0x0a, 0x0b, 0x54, 0x6f, 0x75, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x31, 0x0a, 0x0c, 0x54, 0x6f, 0x75, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x21, 0x0a, 0x04, 0x74, 0x6f, 0x75, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x74, 0x6f, 0x75, 0x72, 0x2e, 0x54, 0x6f, 0x75, 0x72, 0x44, 0x54, 0x4f, 0x52,
	0x04, 0x74, 0x6f, 0x75, 0x72, 0x2a, 0x3f, 0x0a, 0x0d, 0x4d, 0x61, 0x70, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x10,
	0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x10,
	0x01, 0x12, 0x06, 0x0a, 0x02, 0x57, 0x43, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x61, 0x72,
	0x6b, 0x69, 0x6e, 0x67, 0x10, 0x03, 0x2a, 0x30, 0x0a, 0x0e, 0x54, 0x6f, 0x75, 0x72, 0x44, 0x69,
	0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x12, 0x08, 0x0a, 0x04, 0x45, 0x61, 0x73, 0x79,
	0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x10, 0x01, 0x12, 0x08,
	0x0a, 0x04, 0x48, 0x61, 0x72, 0x64, 0x10, 0x02, 0x32, 0x93, 0x01, 0x0a, 0x0b, 0x54, 0x6f, 0x75,
	0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x42, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x6f, 0x75, 0x72, 0x12, 0x0d, 0x2e, 0x74, 0x6f, 0x75, 0x72, 0x2e, 0x54, 0x6f,
	0x75, 0x72, 0x44, 0x54, 0x4f, 0x1a, 0x12, 0x2e, 0x74, 0x6f, 0x75, 0x72, 0x2e, 0x54, 0x6f, 0x75,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x11, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x0b, 0x3a, 0x01, 0x2a, 0x22, 0x06, 0x2f, 0x74, 0x6f, 0x75, 0x72, 0x73, 0x12, 0x40, 0x0a, 0x07,
	0x47, 0x65, 0x74, 0x54, 0x6f, 0x75, 0x72, 0x12, 0x11, 0x2e, 0x74, 0x6f, 0x75, 0x72, 0x2e, 0x54,
	0x6f, 0x75, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x74, 0x6f, 0x75,
	0x72, 0x2e, 0x54, 0x6f, 0x75, 0x72, 0x44, 0x54, 0x4f, 0x22, 0x13, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x0d, 0x12, 0x0b, 0x2f, 0x74, 0x6f, 0x75, 0x72, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x42, 0x14,
	0x5a, 0x12, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x6f, 0x75, 0x72, 0x2d, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tour_service_proto_rawDescOnce sync.Once
	file_tour_service_proto_rawDescData = file_tour_service_proto_rawDesc
)

func file_tour_service_proto_rawDescGZIP() []byte {
	file_tour_service_proto_rawDescOnce.Do(func() {
		file_tour_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_tour_service_proto_rawDescData)
	})
	return file_tour_service_proto_rawDescData
}

var file_tour_service_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_tour_service_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_tour_service_proto_goTypes = []interface{}{
	(MapObjectType)(0),        // 0: tour.MapObjectType
	(TourDifficulty)(0),       // 1: tour.TourDifficulty
	(*CheckpointDTO)(nil),     // 2: tour.CheckpointDTO
	(*TourDTO)(nil),           // 3: tour.TourDTO
	(*MapObjectDTO)(nil),      // 4: tour.MapObjectDTO
	(*TourPreferenceDTO)(nil), // 5: tour.TourPreferenceDTO
	(*Equipment)(nil),         // 6: tour.Equipment
	(*MapObject)(nil),         // 7: tour.MapObject
	(*TourPreference)(nil),    // 8: tour.TourPreference
	(*TourRequest)(nil),       // 9: tour.TourRequest
	(*TourResponse)(nil),      // 10: tour.TourResponse
}
var file_tour_service_proto_depIdxs = []int32{
	6,  // 0: tour.TourDTO.equipment:type_name -> tour.Equipment
	2,  // 1: tour.TourDTO.checkpoints:type_name -> tour.CheckpointDTO
	0,  // 2: tour.MapObject.category:type_name -> tour.MapObjectType
	1,  // 3: tour.TourPreference.difficulty:type_name -> tour.TourDifficulty
	3,  // 4: tour.TourResponse.tour:type_name -> tour.TourDTO
	3,  // 5: tour.TourService.CreateTour:input_type -> tour.TourDTO
	9,  // 6: tour.TourService.GetTour:input_type -> tour.TourRequest
	10, // 7: tour.TourService.CreateTour:output_type -> tour.TourResponse
	3,  // 8: tour.TourService.GetTour:output_type -> tour.TourDTO
	7,  // [7:9] is the sub-list for method output_type
	5,  // [5:7] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_tour_service_proto_init() }
func file_tour_service_proto_init() {
	if File_tour_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tour_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckpointDTO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tour_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TourDTO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tour_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MapObjectDTO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tour_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TourPreferenceDTO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tour_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Equipment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tour_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MapObject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tour_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TourPreference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tour_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TourRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tour_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TourResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tour_service_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_tour_service_proto_goTypes,
		DependencyIndexes: file_tour_service_proto_depIdxs,
		EnumInfos:         file_tour_service_proto_enumTypes,
		MessageInfos:      file_tour_service_proto_msgTypes,
	}.Build()
	File_tour_service_proto = out.File
	file_tour_service_proto_rawDesc = nil
	file_tour_service_proto_goTypes = nil
	file_tour_service_proto_depIdxs = nil
}
